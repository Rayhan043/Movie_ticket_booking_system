#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>  // For random number generation

#define MAX_USERS 100
#define MAX_MOVIES 6
#define MAX_SEATS 20 

typedef struct {
    char username[80];
    char password[80];
} User;

typedef struct {
    char title[50];
    float price;
    int available_seats;
    int seat_numbers[MAX_SEATS]; 
} Movie;


User users[MAX_USERS] = {
    {"user1", "pass1"},
    {"user2", "pass2"},
    {"user3", "pass3"},
    {"user4", "pass4"},
    {"user5", "pass5"}
};

int userCount = 5; 
Movie movies[MAX_MOVIES] = {
    {"Nabab", 12.0, MAX_SEATS}, 
    {"Intersteller", 10.0, MAX_SEATS},      
    {"Thor The Dark would", 15.0, MAX_SEATS}, 
    {"BatMen", 12.0, MAX_SEATS}, 
    {"Toofan", 14.0, MAX_SEATS},
    {"Pooran", 14.0, MAX_SEATS}
};


void initializeSeats() {
    // Initialize random number generator
    srand(time(NULL)); 

    for (int i = 0; i < MAX_MOVIES; i++) {
        for (int j = 0; j < MAX_SEATS; j++) {
            movies[i].seat_numbers[j] = j + 1;  // Initialize all seats as available
        }

        // Make some seats unavailable randomly (up to 5 seats per movie)
        int unavailableSeats = rand() % 5;  // Randomly choose how many seats to make unavailable
        for (int j = 0; j < unavailableSeats; j++) {
            int seatIndex = rand() % MAX_SEATS;  // Random seat index to make unavailable
            if (movies[i].seat_numbers[seatIndex] != 0) {
                movies[i].seat_numbers[seatIndex] = 0;  // Mark this seat as unavailable
                movies[i].available_seats--;  // Decrease available seats
            }
        }
    }
}

int loggedIn = 0; 

void signUp() {
    if (userCount >= MAX_USERS) {
        printf("User limit reached. Cannot sign up.\n");
        return;
    }

    char username[50], password[50];
    printf("==Sign Up==\n");
    printf("Choose a username: ");
    scanf("%s", username);

    
    for (int i = 0; i < userCount; i++) {
        if (strcmp(username, users[i].username) == 0) {
            printf("Username already exists. Please choose another one.\n");
            return;
        }
    }

    printf("Choose a password: ");
    scanf("%s", password);

    
    strcpy(users[userCount].username, username);
    strcpy(users[userCount].password, password);
    userCount++;
    printf("Sign up successful! You can now log in.\n");
}

void login() {
    char username[50], password[50];
    printf("=== Login ===\n");
    printf("Username: ");
    scanf("%s", username);
    printf("Password: ");
    scanf("%s", password);

    
    for (int i = 0; i < userCount; i++) {
        if (strcmp(username, users[i].username) == 0 && strcmp(password, users[i].password) == 0) {
            printf("Login successful!\n");
            loggedIn = 1;
            return;
        }
    }
    printf("Invalid username or password.\n");
}

void selectMovie() {
    int choice, numberOfTickets;
    printf("\n=== Select a Movie ===\n");
    for (int i = 0; i < MAX_MOVIES; i++) {
        printf("%d. %s - $%.2f (Seats Available: %d)\n", i + 1, movies[i].title, movies[i].price, movies[i].available_seats);
    }
    printf("Choose a movie (1-%d): ", MAX_MOVIES);
    scanf("%d", &choice);

    if (choice < 1 || choice > MAX_MOVIES) {
        printf("Invalid choice.\n");
        return;
    }

    printf("How many tickets would you like to buy? ");
    scanf("%d", &numberOfTickets);

    
    if (numberOfTickets < 1 || numberOfTickets > movies[choice - 1].available_seats) {
        printf("Invalid number of tickets or not enough seats available.\n");
        return;
    }

    
    printf("Available seat numbers: ");
    for (int i = 0; i < MAX_SEATS; i++) {
        if (movies[choice - 1].seat_numbers[i] != 0) {
            printf("%d ", movies[choice - 1].seat_numbers[i]);
        }
    }
    printf("\n");

    
    int selectedSeats[numberOfTickets];
    for (int i = 0; i < numberOfTickets; i++) {
        printf("Select seat number %d: ", i + 1);
        scanf("%d", &selectedSeats[i]);
        
        if (selectedSeats[i] < 1 || selectedSeats[i] > MAX_SEATS || movies[choice - 1].seat_numbers[selectedSeats[i] - 1] == 0) {
            printf("Invalid seat number. Please select again.\n");
            i--; 
        } else {
            
            movies[choice - 1].seat_numbers[selectedSeats[i] - 1] = 0; 
            movies[choice - 1].available_seats--; 
        }
    }

    printf("You selected: %s\n", movies[choice - 1].title);
    printf("Number of tickets: %d\n", numberOfTickets);
    printf("Total Price: $%.2f\n", numberOfTickets * movies[choice - 1].price);
    printf("Seat Numbers: ");
    for (int i = 0; i < numberOfTickets; i++) {
        printf("%d ", selectedSeats[i]);
    }
    printf("\n");
}

void confirmBooking() {
    printf("\n=== Booking Confirmation ===\n");
    printf("Thank you for your booking!\n");
}

void mainMenu() {
    int choice;
    do {
        printf("\n=== Main Menu ===\n");
        printf("1. Sign Up\n");
        printf("2. Login\n");
        printf("3. Exit\n");
        printf("Choose an option: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                signUp(); 
                break;
            case 2:
                login(); 
                if (loggedIn) {
                    do {
                        selectMovie(); 
                        confirmBooking(); 

                        printf("\nReturn to Main Menu? (1 for Yes, 0 for No): ");
                        scanf("%d", &choice);
                    } while (choice == 1); 
                    loggedIn = 0; 
                }
                break;
            case 3:
                printf("Exiting the system. Thank you!\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 3); 
}

int main() {
    initializeSeats(); 
    mainMenu(); 
    return 0;
}  
